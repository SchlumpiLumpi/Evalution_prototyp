<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <!-- Bootstrap-->
    <link crossorigin="anonymous" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
        rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">
    <script crossorigin="anonymous" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
        src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <!--stylesheet-->
    <link rel="stylesheet" href="stylesheets/style.css">
    <!-- LEAFLET-->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
        integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin>
    <!-- Make sure you put this AFTER Leaflet's CSS-->
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
        integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin></script>
    <!--Chart.js-->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <!-- processed data entries-->
    <script src="data/processed_data/mortalityGeoJSON.js"></script> <!-- base_data-->
    <script src="data/processed_data/keys.js"></script> <!-- var = keys-->
    <script src="data/processed_data/keys_numerical.js"></script> <!-- var = keys_numerical-->
    <script src="data/processed_data/scatter_dataset.js"></script> <!-- var = scatter_dataset-->
    <script src="data/processed_data/statistics.js"></script> <!-- var = statistics-->
    <script src="data/processed_data/spa_results.js"></script> <!-- spa_results -->


</head>

<body>
    <script>
        console.log(keys)
        console.log(base_data)
        console.log(scatter_dataset)
    </script>

    <!-- // my functions -->
    <script type='module' defer src='javascripts/create_UI.js'></script>
    <script type='module' defer src='javascripts/map_renderer.js'></script>
    <script type='module' defer src='javascripts/dynamic_scatter_layout.js'></script>
    <script type='module' defer src='javascripts/dynamic_scatter_draw.js'></script>

    <!-- NAVBAR -->
    <nav class="navbar navbar-expand-lg bg-body-tertiary">
        <div class="container-fluid">
            <a class="navbar-brand" href="/">Dataset A</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup"
                aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
                <div class="navbar-nav">
                    <a class="nav-link" aria-current="page" href="/DB">Dataset B</a>
                </div>
            </div>

            <form class="d-flex mx-5">
                <input id="keyInput" type="text" placeholder="your OpenAi apiKey" class="rounded mx-1">
                <button type="button" class="btn btn-outline-primary my-1 p-1" onclick="confirmKey()">Confirm</button>
            </form>

            <form class="d-flex">
                <button class="btn btn-outline-success" type="button" onclick="toggleChatComponent()">toggle
                    chat</button>
            </form>
        </div>
    </nav>


    <div id="dashboard" class="container-fluid">
        <div class="row my-2">
            <!-- Unique Scatters Side View -->
            <div id="canvasSideView" class="col-3 "></div>
            <!-- Map -->
            <div id="mapDiv" class="col-10">
                <div id="map"></div>
            </div>

            <div id="toolset" class="col-2 container-fluid">
                <!-- Dropdown menu, calculating SpaAutoCorr-->
                <div class="dropdown">
                    <button class="btn dropdown-toggle btn-primary text-light text-center" type="button"
                        data-bs-toggle="dropdown" aria-expanded="false">
                        Spatial Auto Correlation
                    </button>
                    <ul class="dropdown-menu" id="dropdown_menu"></ul>
                </div>
                <!-- Radiobuttons, draw Scatterplot-->
                <div class="card bg-primary my-3">
                    <div class="card-body card-body text-light text-center">
                        Scatterplot
                    </div>
                </div>
                <div id="checkbox_menu" class="container my-3"></div>

                <!-- Chatbox -->
                <div id="chat_component" style="visibility: hidden;">

                    <div class="card bg-primary">
                        <div class="card-body text-light text-center">
                            Chat about your data
                        </div>
                    </div>
                    <div id="chatbox" class="container border rounded">
                        <div class="container-fluid" id="messages" style="height:200px"></div>
                        <input class="rounded" id="userInput" type="text" placeholder="Type a message..."></input>
                        <button type="button" class="btn btn-outline-primary my-1 p-1"
                            onclick="sendMessage()">Send</button>
                    </div>
                </div>
            </div>
        </div>
        <!-- unique scatter bottom view-->
        <div id="canvasBottomView" class="d-flex flex-row"></div>
    </div>


    <!-- all scatterplots table -->
    <div class="container-fluid" style="visibility: hidden;">
        <table class="table" id="charts_table"></table>
    </div>


    <script>
        async function sendMessage() {
            const inputField = document.getElementById("userInput");
            const message = inputField.value.trim();
            if (!message) return;

            displayMessage(message, "user");
            inputField.value = "";

            const response = await fetch("/chat", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ message })
            });

            const data = await response.json();
            displayMessage(data.reply, "assistant");
        }

        function displayMessage(text, sender) {
            const messagesDiv = document.getElementById("messages");
            const messageDiv = document.createElement("p");
            const authorDiv = document.createElement("p")

            authorDiv.textContent = sender

            messageDiv.textContent = text;
            messageDiv.classList.add("message", sender);
            if (sender == "user") {
                messageDiv.setAttribute("class", "my-1 text-end")
                authorDiv.setAttribute("class", "my-2 text-end fs-6")

                console.log("user message")
            }
            if (sender == "assistant") {
                messageDiv.setAttribute("class", "my-1 text-start")
                authorDiv.setAttribute("class", "my-2 text-start fs-6")
                console.log("assistant message")
            }
            messagesDiv.appendChild(authorDiv)
            messagesDiv.appendChild(messageDiv);
            messagesDiv.scrollTop = messagesDiv.scrollHeight;
        }
    </script>
    <script>
        async function confirmKey() {
            const keyInput = document.getElementById("keyInput")
            const apiKey = keyInput.value
            if (!apiKey) {
                return
            }
            const response = await fetch("/apiKey", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ apiKey })
            });
        }
    </script>
    <script>
        function toggleChatComponent() {
            const chat = document.getElementById("chat_component")
            if (chat.style["visibility"] == "hidden") {
                chat.style["visibility"] = "visible"
            }
            else {
                chat.style["visibility"] = "hidden"
            }
        }
    </script>
</body>

</html>